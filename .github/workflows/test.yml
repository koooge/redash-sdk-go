name: Test

# TODO: test on Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.14', '1.15']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
      id: go

    - name: Lint
      run: |
        go vet ./redash/...
        test `gofmt -l . | wc -l` = 0

    - name: Coverage
      run: |
        go test -coverprofile=cover.out -covermode=count ./redash/...
        go tool cover -html=cover.out

    - name: Code Climate Test Coverage
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        CC_FILE: coverage/codeclimate.${{ github.run_number }}.json
      run: |
        curl -sSL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter
        ./cc-test-reporter format-coverage --input-type gocov --output ${{ env.CC_FILE }} cover.out
        ./cc-test-reporter upload-coverage -i ${{ env.CC_FILE }}
